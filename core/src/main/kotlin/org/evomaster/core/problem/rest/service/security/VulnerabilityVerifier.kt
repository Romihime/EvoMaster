package org.evomaster.core.problem.rest.service.security

import com.github.tomakehurst.wiremock.WireMockServer
import org.evomaster.core.problem.rest.service.SecurityRest
import org.slf4j.Logger
import org.slf4j.LoggerFactory
import javax.annotation.PostConstruct

class VulnerabilityVerifier {

    companion object {
        private val log: Logger = LoggerFactory.getLogger(SecurityRest::class.java)
    }

    private var wireMockServer: WireMockServer? = null

    @PostConstruct
    fun init() {
        // TODO: Initialise WireMock to trace SSRF requests
        initialiseVerifier()
    }

    fun verify() {
        // TODO: How to verify? at each execution as at last
        //  in one execution.
    }

    private fun initialiseVerifier() {
        wireMockServer = WireMockServer(8089)
    }

    private fun resetHTTPVerifier() {
        wireMockServer?.resetAll()
    }
}
